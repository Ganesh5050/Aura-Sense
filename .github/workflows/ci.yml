name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Build frontend
      run: npm run build
    
    - name: Run tests
      run: npm test -- --coverage --watchAll=false

  backend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Python dependencies
      run: |
        cd Speech_Emotion_Detection-main
        pip install -r requirements.txt
    
    - name: Run backend tests
      run: |
        cd Speech_Emotion_Detection-main
        python -m pytest tests/ -v || echo "No tests found, skipping"
    
    - name: Test model training
      run: |
        cd Speech_Emotion_Detection-main
        python create_sample_dataset.py

  integration-test:
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        npm ci
        cd Speech_Emotion_Detection-main
        pip install -r requirements.txt
    
    - name: Start backend
      run: |
        cd Speech_Emotion_Detection-main
        python app/app.py &
        sleep 10
    
    - name: Test integration
      run: |
        python test_integration.py
    
    - name: Build and test frontend
      run: |
        npm run build
        npm run preview &
        sleep 5
        curl -f http://localhost:4173 || exit 1

  deploy:
    runs-on: ubuntu-latest
    needs: [integration-test]
    if: github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
